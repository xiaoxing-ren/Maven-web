AOP(Aspect Oriented Programming)中的基本概念 
AOP  		面向切面编程

aspect		切面/切面类

joinPoint	连接点
	在spring的aop中只有 类中的方法 可以做连接点,每一个方法都可以是
	一个连接点.
	
pointCut	切入点
	一组连接点的集合

advice		通知/拦截器 
	用来控制切面类将来到底是织入到切入点的前面、后面或者是抛异常的时候。

adivsor		增强器
	用来筛选类中的哪些方法是我们的连接点(哪些方法需要被拦截).

target		目标对象

proxy		代理对象

wave		织入

通知的类型：

    前置通知（Before advice）： 
    	在某连接点（join point）之前执行的通知

    返回后通知（After returning advice）： 
    	在某连接点（join point）正常完成后执行的通知：例如，一个方法没有抛出任何异常，正常返回。

    抛出异常后通知（After throwing advice）： 
    	在方法抛出异常退出时执行的通知。

    后通知（After (finally) advice）： 
    	当某连接点退出的时候执行的通知

    环绕通知（Around Advice）： 
    	包围一个连接点（join point）的通知，例如事务的处理,就需要这样的通知,因为事务需要在方法前开启,在方法后提交
